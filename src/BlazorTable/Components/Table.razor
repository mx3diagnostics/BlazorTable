@namespace BlazorTable
@typeparam TableItem
@inject NavigationManager NavigationManager

<CascadingValue Value="(ITable<TableItem>)this" Name="Table">
    @ChildContent
</CascadingValue>

@if (Columns.Any())
{
<table class="@TableClass" @attributes="UnknownParameters">
    @if (TempItems != null)
    {
        <thead class="@TableHeadClass">
            <tr style="cursor: pointer;">
                @foreach (IColumn<TableItem> column in Columns)
                {
                    <th style="@(!string.IsNullOrEmpty(column.Width) ? $"width:{column.Width};" : "") user-select: none"
                        @ondrop="@(() => HandleDrop(column))"
                        @ondragstart="@(() => HandleDragStart(column))"
                        ondragover="event.preventDefault();"
                        draggable="@(ColumnReorder.ToString())"
                        @key="column"
                        class="@(column.Class)">

                        <div @onclick="@(() => column.SortBy())">
                            <span>@column.Title</span>

                            @if (column.SortColumn)
                            {
                                if (column.SortDescending)
                                {<span>&#11014;</span> }
                                else
                                { <span>&#11015;</span>}
                            }

                            @if (column.Filterable)
                            {
                                <span @onclick="@((x) => column.ToggleFilter())" @onclick:stopPropagation>
                                    <a href="javascript:;" @ref="column.FilterRef" style="text-decoration: none"><span style="@(column.Filter == null ? "opacity: 0.2;" : string.Empty)">&#128269;</span></a>
                                </span>
                            }
                        </div>
                    </th>
                }
            </tr>
        </thead>
        <tbody class="@TableBodyClass">
            @if (TempItems.Any())
            {
                @foreach (TableItem item in TempItems)
                {
                    <tr @key="item" class="@RowClass(item)" @onclick="() => ABC(item)">
                        @foreach (IColumn<TableItem> column in Columns)
                        {
                            <td @key="column" style="@(column.Align == Align.Left ? "text-align: left;" : column.Align == Align.Center ? "text-align: center;" : column.Align == Align.Right ? "text-align: right;" : string.Empty)"
                                class="@(column.Class)">
                                @if (IsEditMode && column.EditTemplate != null)
                                {
                                    @column.EditTemplate(item)
                                }
                                else
                                {
                                    if (column.Template == null)
                                    {
                                        @column.Render(item);
                                    }
                                    else
                                    {
                                        @column.Template(item);
                                    }
                                }
                            </td>
                        }
                    </tr>
                }
            }
            else if (_emptyDataTemplate != null)
            {
                <tr>
                    <td colspan="@Columns.Count">
                        @_emptyDataTemplate
                    </td>
                </tr>
            }
        </tbody>
    }
    else
    {
        <thead class="@TableHeadClass">
            <tr style="cursor: pointer;">
                <th></th>
            </tr>
        </thead>
        <tr>
            <td colspan="@Columns.Count">
                @if (_loadingDataTemplate != null)
                {
                    @_loadingDataTemplate
                }
                else
                {
                    <div class="text-center">
                        Loading...
                    </div>
                }
            </td>
        </tr>
    }
</table>
}

@code {
    private void ABC(TableItem item)
    {
        NavigationManager.NavigateTo("item");
    }
}
